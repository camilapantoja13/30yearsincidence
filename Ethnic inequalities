# -----------------------------------------------
# Population overview
# -----------------------------------------------
library(readr)

summary_interpolated <- read_csv(
  "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/PhD/Incidence 30 years/Census check/Checked/Interpolation/summary_interpolated_full.csv"
)

# A. TABLES ----

# 1. Absolute population by ethnicity
pop_absolute <- summary_interpolated %>%
  group_by(Year, Ethnicity) %>%
  summarise(Total_Population = sum(Total_interp, na.rm = TRUE), .groups = "drop")

# 2. Relative (%) population
pop_relative <- pop_absolute %>%
  group_by(Year) %>%
  mutate(
    Proportion = Total_Population / sum(Total_Population) * 100
  ) %>%
  ungroup()

# B. FIGURES ----

library(ggplot2)

# Define custom color shades
ethnicity_colors <- c(
  "White" = "#9ebcda",
  "Black African" = "#8c96c6",
  "Black Caribbean" = "#8c6bb1",
  "Black Other" = "#88419d",
  "Other" = "#6e016b"
)

# Apply to the plot
plot_relative <- ggplot(pop_relative, aes(x = Year, y = Proportion, fill = Ethnicity)) +
  geom_area(alpha = 0.9) +
  scale_fill_manual(values = ethnicity_colors) +
  labs(
    title = "Ethnic Composition of South London (1991–2024)",
    y = "Proportion of Population (%)",
    x = "Year"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold")
  )

# Display it
print(plot_relative)


# Save tables
library(readr)
write_csv(pop_absolute, "population_by_ethnicity_absolute.csv")
write_csv(pop_relative, "population_by_ethnicity_relative.csv")


# -----------------------------------------------
# All strokes by ethnicity
# -----------------------------------------------

# Extract ethnicity from your cleaned dataset
slsr_clean <- slsr_clean %>%
  mutate(
    ethnicity = case_when(
      eth6cat == 1 ~ "White",
      eth6cat == 2 ~ "Black Caribbean",
      eth6cat == 3 ~ "Black African",
      eth6cat == 4 ~ "Black Other",
      eth6cat == 5 ~ "Other",
      TRUE ~ NA_character_
    )
  ) %>%
  filter(!is.na(ethnicity))

# Load and clean population by ethnicity
population_ethnicity <- read.csv(
  "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/PhD/Incidence 30 years/Census check/Checked/Interpolation/population_by_ethnicity.csv"
) %>%
  rename(
    year = Year,
    ethnicity = Ethnicity,
    population = Total
  ) %>%
  mutate(
    year = as.integer(year),
    ethnicity = trimws(ethnicity),
    population = as.numeric(population)
  ) %>%
  filter(year >= 1995, year <= 2024)

stroke_yearly_ethnicity_fixed <- stroke_yearly_ethnicity %>%
  mutate(
    cases = case_when(
      year == 1995 & ethnicity == "Other" ~ 21,
      year == 1995 & ethnicity == "White" ~ cases + (114 - 21),  # move 93 cases to White
      TRUE ~ cases
    )
  )
# Count strokes by year and ethnicity
stroke_yearly_ethnicity_fixed <- slsr_clean %>%
  group_by(year, ethnicity) %>%
  summarise(cases = n(), .groups = "drop")

# Calculate crude incidence
crude_incidence_ethnicity <- stroke_yearly_ethnicity_fixed %>%
  left_join(population_ethnicity, by = c("year", "ethnicity")) %>%
  mutate(
    incidence_per_100k = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci = pmax(0, incidence_per_100k - 1.96 * se),
    upper_ci = incidence_per_100k + 1.96 * se
  )

# ESP
library(readr)
library(dplyr)
library(readr)
library(dplyr)

# Load population
population_age_ethnicity <- read_csv(
  "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/PhD/Incidence 30 years/Census check/Checked/Interpolation/population_by_age_ethnicity_sex.csv"
) %>%
  group_by(year = Year, ethnicity = Ethnicity, age_group = `Age Range`) %>%
  summarise(population = sum(Total, na.rm = TRUE), .groups = "drop") %>%
  filter(year >= 1995, year <= 2024)
# Stroke counts by year, ethnicity, and age
stroke_ethnicity_age <- slsr_clean %>%
  filter(age >= 20) %>%
  mutate(
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  ) %>%
  filter(!is.na(age_group)) %>%
  count(year, ethnicity, age_group, name = "cases")

# Fixing "Other"
library(dplyr)
library(lubridate)

# Step 1: Categorise age groups and ethnicity
stroke_age_ethnicity_counts <- slsr_clean %>%
  filter(age >= 20, !is.na(ethnicity)) %>%
  mutate(
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    ),
    year = year(dtstrk)
  ) %>%
  count(year, ethnicity, age_group, name = "cases")

# Filter 1995 Other
other_1995 <- stroke_age_ethnicity_counts %>%
  filter(year == 1995, ethnicity == "Other")

# Total cases (too high currently)
total_other_cases <- sum(other_1995$cases)

# Proportions
other_proportions <- other_1995 %>%
  mutate(prop = cases / total_other_cases)

# Assign correct total (21 cases) using proportions
corrected_other <- other_proportions %>%
  mutate(cases = round(prop * 21)) %>%
  select(year, age_group, ethnicity, cases)

# Replace only the "Other" rows from 1995
stroke_age_ethnicity_counts_fixed <- stroke_age_ethnicity_counts %>%
  filter(!(year == 1995 & ethnicity == "Other")) %>%
  bind_rows(corrected_other)


# Load ESP weights
esp <- tibble::tibble(
  age_group = c("20-24", "25-29", "30-34", "35-39", "40-44", "45-49",
                "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
                "80-84", "85+"),
  std_pop = c(6000, 6000, 6500, 7000, 7000, 7000,
              7000, 6000, 5000, 4000, 3000, 2000, 1000, 1000)
)


# Standardise
esp_ethnicity <- stroke_age_ethnicity_counts_fixed %>%
  left_join(population_age_ethnicity, by = c("year", "age_group", "ethnicity")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), !is.na(std_pop), population > 0) %>%
  group_by(year, ethnicity) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / sum(std_pop) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / sum(std_pop) * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

# Render the table: 
library(dplyr)
library(glue)
library(writexl)


# Clean and rename CI columns for clarity
crude_clean <- crude_incidence_ethnicity %>%
  rename(
    crude_rate = incidence_per_100k,
    lower_ci_crude = lower_ci,
    upper_ci_crude = upper_ci
  )

esp_clean <- esp_ethnicity %>%
  rename(
    std_rate = std_rate,
    lower_ci_esp = lower_ci,
    upper_ci_esp = upper_ci
  )

# Join crude and ESP data
rendered_ethnicity_table <- crude_clean %>%
  left_join(esp_clean, by = c("year", "ethnicity")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR` = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity, `Crude IR`, `ESP IR`)

# Step 3: Save to Excel
write_xlsx(
  list("Rendered Stroke Incidence by Ethnicity" = rendered_ethnicity_table),
  path = "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/stroke_incidence_ethnicity_rendered.xlsx"
)

# === 5 years analysis === 

# Define 5-year intervals
stroke_age_ethnicity_counts_fixed <- stroke_age_ethnicity_counts_fixed %>%
  mutate(
    period_5 = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    )
  )

population_age_ethnicity <- population_age_ethnicity %>%
  mutate(
    period_5 = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    )
  )
# Aggregate stroke cases and population
esp_ethnicity_5yr <- stroke_age_ethnicity_counts_fixed %>%
  left_join(population_age_ethnicity, by = c("period_5", "age_group", "ethnicity")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), !is.na(std_pop), population > 0) %>%
  group_by(period_5, ethnicity) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / sum(std_pop) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / sum(std_pop) * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )


# -----------------------------------------------
# Heatmap of all strokes by ethnicity
# -----------------------------------------------
library(dplyr)
library(lubridate)

stroke_all_counts <- slsr_clean %>%
  filter(age >= 20, !is.na(ethnicity), !is.na(sex)) %>%
  mutate(
    year = year(dtstrk),
    sex = ifelse(sex == 1, "Male", "Female"),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  ) %>%
  count(year, ethnicity, sex, age_group, name = "cases")

# Clean and prepare the population data including 85+
population_by_age_ethnicity_sex <- summary_interpolated %>%
  rename(
    year = Year,
    sex = Sex,
    ethnicity = Ethnicity,
    age_group = `Age Range`,
    population = Total_interp
  ) %>%
  # Fix the 85/85+ group consistently
  mutate(age_group = ifelse(age_group == "85", "85+", age_group)) %>%
  filter(age_group %in% c("20-24", "25-29", "30-34", "35-39", "40-44",
                          "45-49", "50-54", "55-59", "60-64", "65-69",
                          "70-74", "75-79", "80-84", "85+"))


esp_all_summary_all_years <- stroke_all_counts %>%
  left_join(population_by_age_ethnicity_sex, 
            by = c("year", "age_group", "ethnicity", "sex")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity, sex, age_group) %>%
  summarise(
    std_rate = (sum(cases / population) * std_pop / esp_total) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

library(glue)

esp_all_summary_grouped <- esp_all_summary_all_years %>%
  filter(!ethnicity %in% c("Black Other", "Other")) %>%
  mutate(
    age_group_6cat = case_when(
      age_group %in% c("20-24", "25-29", "30-34", "35-39", "40-44") ~ "15–44",
      age_group %in% c("45-49", "50-54") ~ "45–54",
      age_group %in% c("55-59", "60-64") ~ "55–64",
      age_group %in% c("65-69", "70-74") ~ "65–74",
      age_group %in% c("75-79", "80-84") ~ "75–84",
      age_group == "85+" ~ "85+"
    )
  ) %>%
  group_by(ethnicity, sex, age_group_6cat) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    lower_ci = mean(lower_ci, na.rm = TRUE),
    upper_ci = mean(upper_ci, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    label = glue("{round(std_rate, 2)} ({round(lower_ci, 2)}–{round(upper_ci, 2)})"),
    group = paste(ethnicity, sex),
    text_color = ifelse(std_rate > 50, "white", "black")
  )
library(ggplot2)

ggplot(esp_all_summary_grouped, aes(x = group, y = age_group_6cat, fill = std_rate)) +
  geom_tile(color = "white") +
  geom_text(aes(label = label, color = text_color), size = 3, show.legend = FALSE) +
  scale_color_identity() +
  scale_fill_gradient(
    name = "ESP Rate\n(per 100,000)",
    low = "#f2e5f7", high = "#49006a", na.value = "grey90"
  ) +
  labs(
    title = "Heatmap of ESP-Standardised Stroke Incidence (All Types)",
    subtitle = "Grouped by Age, Sex, and Ethnicity — Average over 30 years per 100,000 with 95% CI",
    x = NULL, y = "Age Group"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    panel.grid = element_blank(),
    legend.position = "right"
  )

# -----------------------------------------------
# Table for poster
# -----------------------------------------------
library(dplyr)
library(glue)
library(tidyr)

# Step 1: Create decade variable
slsr_clean <- slsr_clean %>%
  mutate(
    period_10 = case_when(
      year(dtstrk) %in% 1995:2004 ~ "1995–2004",
      year(dtstrk) %in% 2005:2014 ~ "2005–2014",
      year(dtstrk) %in% 2015:2024 ~ "2015–2024",
      TRUE ~ NA_character_
    )
  )

# Step 2: Filter and group for each stroke subtype
stroke_subtypes <- list(
  ischaemic = 1:5,
  pich = 6,
  sah = 7
)

get_esp_summary <- function(subtype_code, name) {
  slsr_clean %>%
    filter(subtype %in% subtype_code, age >= 20, !is.na(ethnicity), !is.na(sex)) %>%
    mutate(
      year = year(dtstrk),
      sex = case_when(
        sex == 1 ~ "Male",
        sex == 2 ~ "Female",
        TRUE ~ NA_character_
      ),
      age_group = case_when(
        age >= 20 & age < 25 ~ "20-24",
        age >= 25 & age < 30 ~ "25-29",
        age >= 30 & age < 35 ~ "30-34",
        age >= 35 & age < 40 ~ "35-39",
        age >= 40 & age < 45 ~ "40-44",
        age >= 45 & age < 50 ~ "45-49",
        age >= 50 & age < 55 ~ "50-54",
        age >= 55 & age < 60 ~ "55-59",
        age >= 60 & age < 65 ~ "60-64",
        age >= 65 & age < 70 ~ "65-69",
        age >= 70 & age < 75 ~ "70-74",
        age >= 75 & age < 80 ~ "75-79",
        age >= 80 & age < 85 ~ "80-84",
        age >= 85 ~ "85+"
      ),
      period_10 = case_when(
        year %in% 1995:2004 ~ "1995–2004",
        year %in% 2005:2014 ~ "2005–2014",
        year %in% 2015:2024 ~ "2015–2024"
      )
    ) %>%
    count(period_10, ethnicity, sex, age_group, year, name = "cases") %>%
    left_join(population_by_age_ethnicity_sex, by = c("year", "age_group", "ethnicity", "sex")) %>%
    left_join(esp, by = "age_group") %>%
    filter(!is.na(cases), !is.na(population), population > 0) %>%
    group_by(period_10, ethnicity, sex) %>%
    summarise(
      std_rate = (sum((cases / population) * std_pop) / sum(std_pop)) * 100000,
      se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / sum(std_pop) * 100000,
      lower_ci = pmax(0, std_rate - 1.96 * se),
      upper_ci = std_rate + 1.96 * se,
      .groups = "drop"
    ) %>%
    mutate(
      type = name,
      formatted = glue::glue("{round(std_rate, 1)} ({round(lower_ci, 1)}–{round(upper_ci, 1)})")
    )
}


# Step 3: Bind together
esp_ischaemic <- get_esp_summary(1:5, "Ischaemic")
esp_pich <- get_esp_summary(6, "PICH")
esp_sah <- get_esp_summary(7, "SAH")

esp_all <- bind_rows(esp_ischaemic, esp_pich, esp_sah)

# Step 4: Pivot to final table format
esp_table_rendered <- esp_all %>%
  select(period_10, ethnicity, type, formatted) %>%
  pivot_wider(names_from = type, values_from = formatted) %>%
  arrange(period_10, ethnicity)

# Step 5: Optional - Save or View
library(writexl)
write_xlsx(list("Stroke ESP Summary" = esp_table_rendered),
           path = "stroke_esp_summary_decade.xlsx")



# -----------------------------------------------
# Trying to check my results
# -----------------------------------------------
# Grouping Black and White
slsr_clean <- slsr_clean %>%
  mutate(
    ethnicity_group = case_when(
      eth6cat == 1 ~ "White",
      eth6cat %in% 2:4 ~ "Black",
      eth6cat == 5 ~ "Other",
      TRUE ~ NA_character_
    )
  ) %>%
  filter(ethnicity_group %in% c("White", "Black"))  # Only keep White and Black

# Stroke counts
stroke_counts_white_black <- slsr_clean %>%
  filter(age >= 20) %>%
  mutate(
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    ),
    year = lubridate::year(dtstrk),
    period_2yr = cut(
      year,
      breaks = seq(1995, 2025, by = 2),
      right = FALSE,
      include.lowest = TRUE,
      labels = c("1995–1996", "1997–1998", "1999–2000", "2001–2002", "2003–2004",
                 "2005–2006", "2007–2008", "2009–2010", "2011–2012", "2013–2014",
                 "2015–2016", "2017–2018", "2019–2020", "2021–2022", "2023–2024")
    )
  ) %>%
  filter(!is.na(age_group), !is.na(period_2yr)) %>%
  count(period_2yr, ethnicity_group, age_group, name = "cases")
# Collapse into 2y
population_2yr <- population_age_ethnicity %>%
  filter(ethnicity %in% c("White", "Black African", "Black Caribbean", "Black Other")) %>%
  mutate(
    ethnicity_group = case_when(
      ethnicity == "White" ~ "White",
      TRUE ~ "Black"
    ),
    period_2yr = cut(
      year,
      breaks = seq(1995, 2025, by = 2),
      right = FALSE,
      include.lowest = TRUE,
      labels = c("1995–1996", "1997–1998", "1999–2000", "2001–2002", "2003–2004",
                 "2005–2006", "2007–2008", "2009–2010", "2011–2012", "2013–2014",
                 "2015–2016", "2017–2018", "2019–2020", "2021–2022", "2023–2024")
    )
  ) %>%
  group_by(period_2yr, ethnicity_group, age_group) %>%
  summarise(population = sum(population, na.rm = TRUE), .groups = "drop")
esp <- tibble::tibble(
  age_group = c("20-24", "25-29", "30-34", "35-39", "40-44", "45-49",
                "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
                "80-84", "85+"),
  std_pop = c(6000, 6000, 6500, 7000, 7000, 7000,
              7000, 6000, 5000, 4000, 3000, 2000, 1000, 1000)
)
esp_white_black_2yr <- stroke_counts_white_black %>%
  left_join(population_2yr, by = c("period_2yr", "age_group", "ethnicity_group")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), !is.na(std_pop), population > 0) %>%
  group_by(period_2yr, ethnicity_group) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / sum(std_pop) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / sum(std_pop) * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

# -----------------------------------------------
# All strokes White / Black African / Black Caribbean / Other
# -----------------------------------------------

library(dplyr)
library(lubridate)

slsr_clean <- slsr_clean %>%
  mutate(
    year = year(dtstrk),
    ethnicity_group = case_when(
      eth6cat == 1 ~ "White",
      eth6cat == 2 ~ "Black Caribbean",
      eth6cat == 3 ~ "Black African",
      eth6cat == 5 ~ "Other",  # exclude eth6cat == 4 (Black Other)
      TRUE ~ NA_character_
    )
  ) %>%
  filter(!is.na(ethnicity_group))


# Crude incidence
# Stroke counts
stroke_yearly_ethnicity_4groups <- slsr_clean %>%
  count(year, ethnicity_group, name = "cases")

# Population
population_ethnicity_4groups <- population_ethnicity %>%
  filter(ethnicity %in% c("White", "Black Caribbean", "Black African", "Other")) %>%
  rename(
    year = year,
    ethnicity_group = ethnicity,
    population = population
  )

# Crude incidence
crude_4groups <- stroke_yearly_ethnicity_4groups %>%
  left_join(population_ethnicity_4groups, by = c("year", "ethnicity_group")) %>%
  mutate(
    incidence_per_100k = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci = pmax(0, incidence_per_100k - 1.96 * se),
    upper_ci = incidence_per_100k + 1.96 * se
  )

# ESP
# Stroke counts by age group
stroke_ethnicity_age_4groups <- slsr_clean %>%
  filter(age >= 20) %>%
  mutate(
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  ) %>%
  count(year, ethnicity_group, age_group, name = "cases")

# ESP weights
esp <- tibble::tibble(
  age_group = c("20-24", "25-29", "30-34", "35-39", "40-44", "45-49",
                "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
                "80-84", "85+"),
  std_pop = c(6000, 6000, 6500, 7000, 7000, 7000,
              7000, 6000, 5000, 4000, 3000, 2000, 1000, 1000)
)

# Population by age & ethnicity
population_ethnicity_age_4groups <- population_age_ethnicity %>%
  filter(ethnicity %in% c("White", "Black Caribbean", "Black African", "Other")) %>%
  rename(
    year = year,
    ethnicity_group = ethnicity,
    age_group = `age_group`
  )

# ESP calculation
esp_4groups <- stroke_ethnicity_age_4groups %>%
  left_join(population_ethnicity_age_4groups, by = c("year", "age_group", "ethnicity_group")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity_group) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / sum(std_pop) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / sum(std_pop) * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

# Rendering
library(dplyr)
library(glue)

# Clean and rename columns
crude_ethnicity_4groups_clean <- crude_4groups %>%
  rename(
    crude_rate = incidence_per_100k,
    lower_ci_crude = lower_ci,
    upper_ci_crude = upper_ci
  )

esp_ethnicity_4groups_clean <- esp_4groups%>%
  rename(
    std_rate = std_rate,
    lower_ci_esp = lower_ci,
    upper_ci_esp = upper_ci
  )

rendered_ethnicity_4groups <- crude_ethnicity_4groups_clean %>%
  left_join(esp_ethnicity_4groups_clean, by = c("year", "ethnicity_group")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity_group, `Crude IR`, `ESP IR`)

library(writexl)

write_xlsx(
  list(
    "Crude Incidence"    = crude_ethnicity_4groups_clean,
    "ESP Incidence"      = esp_ethnicity_4groups_clean,
    "Rendered Stroke Incidence" = rendered_ethnicity_4groups
  ),
  path = "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/ethnicity_4groups_rendered.xlsx"
)

# == By 2, 5 and 10 years ==
# Assign 2-, 5-, and 10-year groups
crude_ethnicity_4groups_clean <- crude_ethnicity_4groups_clean %>%
  mutate(
    period_2yr = cut(year, breaks = seq(1995, 2025, 2), right = FALSE,
                     labels = paste(seq(1995, 2023, 2), seq(1996, 2024, 2), sep = "–")),
    period_5yr = cut(year, breaks = c(1995, 2000, 2005, 2010, 2015, 2020, 2025), right = FALSE,
                     labels = c("1995–1999", "2000–2004", "2005–2009", "2010–2014", "2015–2019", "2020–2024")),
    period_10yr = cut(year, breaks = c(1995, 2005, 2015, 2025), right = FALSE,
                      labels = c("1995–2004", "2005–2014", "2015–2024"))
  )

esp_ethnicity_4groups_clean <- esp_ethnicity_4groups_clean %>%
  mutate(
    period_2yr = cut(year, breaks = seq(1995, 2025, 2), right = FALSE,
                     labels = paste(seq(1995, 2023, 2), seq(1996, 2024, 2), sep = "–")),
    period_5yr = cut(year, breaks = c(1995, 2000, 2005, 2010, 2015, 2020, 2025), right = FALSE,
                     labels = c("1995–1999", "2000–2004", "2005–2009", "2010–2014", "2015–2019", "2020–2024")),
    period_10yr = cut(year, breaks = c(1995, 2005, 2015, 2025), right = FALSE,
                      labels = c("1995–2004", "2005–2014", "2015–2024"))
  )

# Summarising
summarise_grouped_incidence <- function(data, period_col) {
  data %>%
    group_by(ethnicity_group, .data[[period_col]]) %>%
    summarise(
      cases = sum(cases, na.rm = TRUE),
      population = sum(population, na.rm = TRUE),
      crude_rate = (cases / population) * 100000,
      se = sqrt(cases) / population * 100000,
      lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
      upper_ci_crude = crude_rate + 1.96 * se,
      .groups = "drop"
    )
}


esp_2yr <- summarise_grouped_esp(esp_ethnicity_4groups_clean, "period_2yr")
esp_5yr <- summarise_grouped_esp(esp_ethnicity_4groups_clean, "period_5yr")
esp_10yr <- summarise_grouped_esp(esp_ethnicity_4groups_clean, "period_10yr")

library(glue)

rendered_2yr <- crude_2yr_summary %>%
  left_join(esp_2yr, by = c("ethnicity_group", "period_2yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`2-Year Interval` = period_2yr, ethnicity_group, `Crude IR`, `ESP IR`)

rendered_5yr <- crude_5yr_summary %>%
  left_join(esp_5yr, by = c("ethnicity_group", "period_5yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`5-Year Interval` = period_5yr, ethnicity_group, `Crude IR`, `ESP IR`)

rendered_10yr <- crude_10yr_summary %>%
  left_join(esp_10yr, by = c("ethnicity_group", "period_10yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`10-Year Interval` = period_10yr, ethnicity_group, `Crude IR`, `ESP IR`)


library(writexl)

write_xlsx(
  list(
    "Crude 2yr" = crude_2yr_summary,
    "Crude 5yr" = crude_5yr_summary,
    "Crude 10yr" = crude_10yr_summary,

    "ESP 2yr" = esp_2yr,
    "ESP 5yr" = esp_5yr,
    "ESP 10yr" = esp_10yr,

    "Rendered 2yr" = rendered_2yr,
    "Rendered 5yr" = rendered_5yr,
    "Rendered 10yr" = rendered_10yr
  ),
  path = "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/stroke_incidence_ethnicity_4groups_summary_tables.xlsx"
)

# Plotting
ethnicity_colors <- c(
  "White" = "#54278f",          # Deep purple
  "Black Caribbean" = "#6a51a3", # Medium purple
  "Black African" = "#9e9ac8"    # Soft lavender-blue
)

# Ribbons
library(ggplot2)

ggplot(esp_5yr, aes(x = period_5yr, y = std_rate, group = ethnicity_group, color = ethnicity_group, fill = ethnicity_group)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  geom_ribbon(aes(ymin = lower_ci_esp, ymax = upper_ci_esp), alpha = 0.2, color = NA) +
  scale_color_manual(values = c(
    "White" = "#49006a",
    "Black Caribbean" = "#7a0177",
    "Black African" = "#ae017e"
  )) +
  scale_fill_manual(values = c(
    "White" = "#49006a",
    "Black Caribbean" = "#7a0177",
    "Black African" = "#ae017e"
  )) +
  labs(
    title = "ESP-standardised Stroke Incidence (1995–2024)",
    subtitle = "5-Year Intervals by Ethnicity (with 95% CI ribbons)",
    x = "Period",
    y = "Incidence per 100,000",
    color = "Ethnicity",
    fill = "Ethnicity"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "right"
  )

# -----------------------------------------------
# Ischaemic stroke White / Black African / Black Caribbean / Other
# -----------------------------------------------
## I accidentally clossed my session, so I had to do load again my dataset, filter the wards and the years
library(dplyr)
library(readr)
library(lubridate)
library(glue)
library(writexl)

----------------------------------------------------------------------------------------
library(dplyr)
# Step 1: Categorise age group
stroke_age_ethnicity <- slsr_clean %>%
  filter(age >= 20, !is.na(ethnicity)) %>%
  mutate(
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    ),
    year = lubridate::year(dtstrk)
  ) %>%
  count(year, ethnicity, age_group, name = "cases")

# Original counts
other_1995_ischaemic <- stroke_age_ethnicity %>%
  filter(year == 1995, ethnicity == "Other")

other_1995_ischaemic_fixed <- other_1995_ischaemic %>%
  mutate(prop = cases / sum(cases)) %>%
  mutate(cases = round(prop * 7)) %>%
  select(year, ethnicity, age_group, cases)
stroke_age_ethnicity_fixed <- stroke_age_ethnicity %>%
  filter(!(year == 1995 & ethnicity == "Other")) %>%
  bind_rows(other_1995_ischaemic_fixed)

# Crude
# Re-count yearly ischaemic strokes
ischaemic_cases_yearly_fixed <- stroke_age_ethnicity_fixed %>%
  group_by(year, ethnicity) %>%
  summarise(cases = sum(cases), .groups = "drop")

# Join population and calculate crude incidence
ischaemic_crude_fixed <- ischaemic_cases_yearly_fixed %>%
  left_join(population_ethnicity, by = c("year", "ethnicity")) %>%
  mutate(
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci = pmax(0, crude_rate - 1.96 * se),
    upper_ci = crude_rate + 1.96 * se
  )

# ESP
# Join with population and ESP weights
ischaemic_esp_fixed <- stroke_age_ethnicity_fixed %>%
  left_join(population_ethnicity_age, by = c("year", "age_group", "ethnicity")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / esp_total * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

# Rendering
library(dplyr)
library(glue)

# Rename confidence intervals for clarity
crude_clean <- ischaemic_crude_fixed %>%
  rename(
    crude_rate = crude_rate,
    lower_ci_crude = lower_ci,
    upper_ci_crude = upper_ci
  )

esp_clean <- ischaemic_esp_fixed %>%
  rename(
    std_rate = std_rate,
    lower_ci_esp = lower_ci,
    upper_ci_esp = upper_ci
  )

# Merge and format
ischaemic_rendered_table <- crude_clean %>%
  left_join(esp_clean, by = c("year", "ethnicity")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity, `Crude IR`, `ESP IR`)

# == 5 and 10 years ===
# Add 5- and 10-year periods
crude_periods <- crude_clean %>%
  select(year, ethnicity, period_5yr, period_10yr)

# Now join to esp_clean to assign the correct period to each row
esp_clean <- esp_clean %>%
  left_join(crude_periods, by = c("year", "ethnicity"))

crude_clean <- crude_clean %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )

esp_clean <- esp_clean %>%
  mutate(
    period_5yr = crude_clean$period_5yr,
    period_10yr = crude_clean$period_10yr
  )

# 5-Year Crude
crude_5yr <- crude_clean %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    cases = sum(cases, na.rm = TRUE),
    population = sum(population, na.rm = TRUE),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )


# 10-Year Crude
crude_10yr <- crude_clean %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    cases = sum(cases, na.rm = TRUE),
    population = sum(population, na.rm = TRUE),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )


# 5-Year ESP
esp_5yr <- esp_clean %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    se = sqrt(sum(se^2, na.rm = TRUE)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

# 10-Year ESP
esp_10yr <- esp_clean %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    se = sqrt(sum(se^2, na.rm = TRUE)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

rendered_10yr <- crude_10yr %>%
  left_join(esp_10yr, by = c("ethnicity", "period_10yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`10-Year Interval` = period_10yr, ethnicity, cases, population, `Crude IR`, `ESP IR`)

library(writexl)

write_xlsx(
  list(
    "Crude_Yearly"      = ischaemic_crude_fixed,
    "ESP_Yearly"        = ischaemic_esp_fixed,
    "Rendered_Yearly"   = ischaemic_rendered_table,
    
    "Crude_5yr"         = crude_5yr,
    "ESP_5yr"           = esp_5yr,
    "Rendered_5yr"      = rendered_5yr,
    
    "Crude_10yr"        = crude_10yr,
    "ESP_10yr"          = esp_10yr,
    "Rendered_10yr"     = rendered_10yr
  ),
  path = "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/ischaemic_stroke_ethnicity_summary.xlsx"
)

# Crude plot:
crude_colors <- c(
  "Black African"   = "#67001f",  # dark maroon
  "Black Caribbean" = "#b2182b",  # strong red-pink
  "Other"           = "#d6604d",  # muted coral
  "White"           = "#f4a582"   # dusty salmon
)

library(ggplot2)

# Plot 5-year crude incidence
ggplot(crude_5yr_filtered, aes(x = period_5yr, y = crude_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_crude, ymax = upper_ci_crude), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = crude_colors) +
  labs(
    title = "5-Year Crude Incidence of Ischaemic Stroke by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# ESP
esp_colors <- c(
  "Black African"   = "#49006a",  # deep plum
  "Black Caribbean" = "#7a0177",  # rich purple
  "Other"           = "#ae017e",  # moderate fuchsia
  "White"           = "#dd1c77"   # vibrant magenta
)
library(dplyr)
library(ggplot2)

# Filter out "Black Other"
esp_5yr_filtered <- esp_5yr %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Plot
ggplot(esp_5yr_filtered, aes(x = period_5yr, y = std_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_esp, ymax = upper_ci_esp), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = esp_colors) +
  labs(
    title = "5-Year ESP-Standardised Ischaemic Stroke Incidence by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    x = "Period",
    y = "Incidence per 100,000",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# -----------------------------------------------
# All strokes White / Black African / Black Caribbean / Other
# -----------------------------------------------

library(dplyr)
library(lubridate)

# Accidentally slsr_clean got cleaned only to only ischaemics, so had to load it again

# Create stroke counts for ALL strokes (not just ischaemic)
stroke_age_ethnicity_all <- slsr_clean %>%
  filter(age >= 20, !is.na(ethnicity)) %>%
  mutate(
    year = year(dtstrk),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  ) %>%
  count(year, ethnicity, age_group, name = "cases")

# Adjust "Other" for 1995 (from 21 to 9 total strokes)
other_1995_all <- stroke_age_ethnicity_all %>%
  filter(year == 1995, ethnicity == "Other")

other_1995_fixed <- other_1995_all %>%
  mutate(prop = cases / sum(cases)) %>%
  mutate(cases = round(prop * 9)) %>%
  select(year, ethnicity, age_group, cases)

# Replace 1995 "Other"
stroke_age_ethnicity_all_fixed <- stroke_age_ethnicity_all %>%
  filter(!(year == 1995 & ethnicity == "Other")) %>%
  bind_rows(other_1995_fixed)

crude_yearly_all <- stroke_age_ethnicity_all_fixed %>%
  group_by(year, ethnicity) %>%
  summarise(cases = sum(cases), .groups = "drop")

# Make sure population_ethnicity contains all groups and years
crude_all_fixed <- crude_yearly_all %>%
  left_join(population_ethnicity, by = c("year", "ethnicity")) %>%
  mutate(
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se
  )
esp_all_fixed <- stroke_age_ethnicity_all_fixed %>%
  left_join(population_age_ethnicity, by = c("year", "ethnicity", "age_group")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / esp_total * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

# 5 and 10 years
crude_all_fixed <- crude_all_fixed %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )

crude_5yr_all <- crude_all_fixed %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    cases = sum(cases), population = sum(population),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )
crude_10yr_all <- crude_all_fixed %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    cases = sum(cases), population = sum(population),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )

esp_all_fixed <- esp_all_fixed %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )
esp_5yr_all <- esp_all_fixed %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    se = sqrt(sum(se^2, na.rm = TRUE)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )
esp_10yr_all <- esp_all_fixed %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    std_rate = mean(std_rate), se = sqrt(sum(se^2)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )
rendered_yearly <- crude_all_fixed %>%
  left_join(esp_all_fixed, by = c("year", "ethnicity")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR` = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity, `Crude IR`, `ESP IR`)

rendered_5yr <- crude_5yr_all %>%
  left_join(esp_5yr_all, by = c("ethnicity", "period_5yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR` = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`5-Year Interval` = period_5yr, ethnicity, `Crude IR`, `ESP IR`)

rendered_10yr <- crude_10yr_all %>%
  left_join(esp_10yr_all, by = c("ethnicity", "period_10yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR` = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`10-Year Interval` = period_10yr, ethnicity, `Crude IR`, `ESP IR`)
# --- Step 9: Save all tables to Excel ---
write_xlsx(
  list(
    "Crude_Yearly" = crude_all_fixed,
    "ESP_Yearly" = esp_all_fixed,
    "Rendered_Yearly" = rendered_yearly,
    "Crude_5yr" = crude_5yr_all,
    "ESP_5yr" = esp_5yr_all,
    "Rendered_5yr" = rendered_5yr,
    "Crude_10yr" = crude_10yr_all,
    "ESP_10yr" = esp_10yr_all,
    "Rendered_10yr" = rendered_10yr
  ),
  path = "~/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/stroke_incidence_all.xlsx"
)

# Plotting
library(ggplot2)
library(dplyr)

# Filter and clean
crude_5yr_filtered_all <- crude_5yr_all %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Define colors
crude_colors <- c(
  "Black African"   = "#67001f",
  "Black Caribbean" = "#b2182b",
  "Other"           = "#d6604d",
  "White"           = "#f4a582"
)

# Plot
ggplot(crude_5yr_filtered_all, aes(x = period_5yr, y = crude_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_crude, ymax = upper_ci_crude), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = crude_colors) +
  labs(
    title = "5-Year Crude Incidence of Stroke by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# Filter and clean
esp_5yr_filtered_all <- esp_5yr_all %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Define colors
esp_colors <- c(
  "Black African"   = "#49006a",
  "Black Caribbean" = "#7a0177",
  "Other"           = "#ae017e",
  "White"           = "#dd1c77"
)

# Plot
ggplot(esp_5yr_filtered_all, aes(x = period_5yr, y = std_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_esp, ymax = upper_ci_esp), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = esp_colors) +
  labs(
    title = "5-Year ESP-Standardised Stroke Incidence by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# -----------------------------------------------
# Haemorrhagic White / Black African / Black Caribbean / Other
# -----------------------------------------------

library(dplyr)
library(lubridate)

# Haemorrhagic strokes
slsr_haem <- slsr_clean %>%
  filter(subtype == 6, !is.na(ethnicity), age >= 20) %>%
  mutate(
    year = year(dtstrk),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  )

# Get original age distribution for "Other" in 1995
haem_1995_other <- haem_counts_age %>%
  filter(year == 1995, ethnicity == "Other")

# Use proportions to distribute exactly 2 cases
haem_1995_fixed <- haem_1995_other %>%
  mutate(prop = prop.table(cases)) %>%
  mutate(cases = prop * 2)  # Do NOT round yet

haem_counts_age_fixed <- haem_counts_age %>%
  filter(!(year == 1995 & ethnicity == "Other")) %>%
  bind_rows(haem_1995_fixed)

# ESP calculation
haem_esp_fixed <- haem_counts_age_fixed %>%
  left_join(population_ethnicity_age_clean, by = c("year", "ethnicity", "age_group")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / esp_total * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

library(dplyr)
library(glue)
library(writexl)

# 1. Add period labels
haem_crude <- haem_crude %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )

haem_esp <- haem_esp %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )

# 2. Summarise by group

# Crude 5-year
haem_crude_5yr <- haem_crude %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    cases = sum(cases), population = sum(population),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )

# Crude 10-year
haem_crude_10yr <- haem_crude %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    cases = sum(cases), population = sum(population),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )

# ESP 5-year
haem_esp_5yr <- haem_esp %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    std_rate = mean(std_rate), se = sqrt(sum(se^2)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

# ESP 10-year
haem_esp_10yr <- haem_esp %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    std_rate = mean(std_rate), se = sqrt(sum(se^2)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

# 3. Rendered tables

rendered_haem_yearly <- haem_crude %>%
  left_join(haem_esp, by = c("year", "ethnicity")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci, 1)}–{round(upper_ci, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity, `Crude IR`, `ESP IR`)

rendered_haem_5yr <- haem_crude_5yr %>%
  left_join(haem_esp_5yr, by = c("ethnicity", "period_5yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`5-Year Interval` = period_5yr, ethnicity, `Crude IR`, `ESP IR`)

rendered_haem_10yr <- haem_crude_10yr %>%
  left_join(haem_esp_10yr, by = c("ethnicity", "period_10yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`10-Year Interval` = period_10yr, ethnicity, `Crude IR`, `ESP IR`)

# 4. Save to Excel
write_xlsx(
  list(
    "Crude_Yearly"    = haem_crude,
    "ESP_Yearly"      = haem_esp,
    "Rendered_Yearly" = rendered_haem_yearly,

    "Crude_5yr"       = haem_crude_5yr,
    "ESP_5yr"         = haem_esp_5yr,
    "Rendered_5yr"    = rendered_haem_5yr,

    "Crude_10yr"      = haem_crude_10yr,
    "ESP_10yr"        = haem_esp_10yr,
    "Rendered_10yr"   = rendered_haem_10yr
  ),
  path = "~/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/haemorrhagic_by_ethnicity.xlsx"
)

library(ggplot2)
library(dplyr)

# Filter and clean
haem_crude_5yr_filtered <- haem_crude_5yr %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Define printer-safe pink palette for crude
haem_crude_colors <- c(
  "Black African"   = "#67001f",
  "Black Caribbean" = "#b2182b",
  "Other"           = "#d6604d",
  "White"           = "#f4a582"
)

# Plot
ggplot(haem_crude_5yr_filtered, aes(x = period_5yr, y = crude_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_crude, ymax = upper_ci_crude), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = haem_crude_colors) +
  labs(
    title = "5-Year Crude Incidence of Haemorrhagic Stroke by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# Filter and clean
haem_esp_5yr_filtered <- haem_esp_5yr %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Define printer-safe purple palette for ESP
haem_esp_colors <- c(
  "Black African"   = "#49006a",
  "Black Caribbean" = "#7a0177",
  "Other"           = "#ae017e",
  "White"           = "#dd1c77"
)

# Plot
ggplot(haem_esp_5yr_filtered, aes(x = period_5yr, y = std_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_esp, ymax = upper_ci_esp), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = haem_esp_colors) +
  labs(
    title = "5-Year ESP-Standardised Incidence of Haemorrhagic Stroke by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# -----------------------------------------------
# SAH White / Black African / Black Caribbean / Other
# -----------------------------------------------
library(dplyr)
library(lubridate)
library(glue)
library(writexl)

# Filter SAH strokes and add age groups
slsr_sah <- slsr_clean %>%
  filter(subtype == 7, !is.na(ethnicity), age >= 20) %>%
  mutate(
    year = year(dtstrk),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  )
sah_yearly_cases <- slsr_sah %>%
  group_by(year, ethnicity) %>%
  summarise(cases = n(), .groups = "drop")

sah_crude_yearly <- sah_yearly_cases %>%
  left_join(population_ethnicity, by = c("year", "ethnicity")) %>%
  mutate(
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se
  )
sah_counts_age <- slsr_sah %>%
  filter(!is.na(age_group)) %>%
  count(year, ethnicity, age_group, name = "cases")

sah_counts_age <- slsr_sah %>%
  count(year, ethnicity, age_group, name = "cases")

sah_esp <- sah_counts_age %>%
  left_join(population_ethnicity_age, by = c("year", "ethnicity", "age_group")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity) %>%
  summarise(
    std_rate = sum((cases / population) * std_pop) / esp_total * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

sah_crude_yearly <- sah_crude_yearly %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )

sah_esp <- sah_esp %>%
  mutate(
    period_5yr = case_when(
      year %in% 1995:1999 ~ "1995–1999",
      year %in% 2000:2004 ~ "2000–2004",
      year %in% 2005:2009 ~ "2005–2009",
      year %in% 2010:2014 ~ "2010–2014",
      year %in% 2015:2019 ~ "2015–2019",
      year %in% 2020:2024 ~ "2020–2024"
    ),
    period_10yr = case_when(
      year %in% 1995:2004 ~ "1995–2004",
      year %in% 2005:2014 ~ "2005–2014",
      year %in% 2015:2024 ~ "2015–2024"
    )
  )
# 5-Year Crude
sah_crude_5yr <- sah_crude_yearly %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    cases = sum(cases, na.rm = TRUE),
    population = sum(population, na.rm = TRUE),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )

# 10-Year Crude
sah_crude_10yr <- sah_crude_yearly %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    cases = sum(cases, na.rm = TRUE),
    population = sum(population, na.rm = TRUE),
    crude_rate = (cases / population) * 100000,
    se = sqrt(cases) / population * 100000,
    lower_ci_crude = pmax(0, crude_rate - 1.96 * se),
    upper_ci_crude = crude_rate + 1.96 * se,
    .groups = "drop"
  )

# 5-Year ESP
sah_esp_5yr <- sah_esp %>%
  group_by(ethnicity, period_5yr) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    se = sqrt(sum(se^2, na.rm = TRUE)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

# 10-Year ESP
sah_esp_10yr <- sah_esp %>%
  group_by(ethnicity, period_10yr) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    se = sqrt(sum(se^2, na.rm = TRUE)) / n(),
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

# Clean and join
sah_rendered_yearly <- sah_crude_yearly %>%
  left_join(sah_esp, by = c("year", "ethnicity")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity, `Crude IR`, `ESP IR`)

sah_rendered_5yr <- sah_crude_5yr %>%
  left_join(sah_esp_5yr, by = c("ethnicity", "period_5yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`5-Year Interval` = period_5yr, ethnicity, `Crude IR`, `ESP IR`)

sah_rendered_10yr <- sah_crude_10yr %>%
  left_join(sah_esp_10yr, by = c("ethnicity", "period_10yr")) %>%
  mutate(
    `Crude IR` = glue("{round(crude_rate, 1)} (95% CI {round(lower_ci_crude, 1)}–{round(upper_ci_crude, 1)})"),
    `ESP IR`   = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(`10-Year Interval` = period_10yr, ethnicity, `Crude IR`, `ESP IR`)

library(writexl)

write_xlsx(
  list(
    "Crude_Yearly"    = sah_crude_yearly,
    "ESP_Yearly"      = sah_esp,
    "Rendered_Yearly" = sah_rendered_yearly,

    "Crude_5yr"       = sah_crude_5yr,
    "ESP_5yr"         = sah_esp_5yr,
    "Rendered_5yr"    = sah_rendered_5yr,

    "Crude_10yr"      = sah_crude_10yr,
    "ESP_10yr"        = sah_esp_10yr,
    "Rendered_10yr"   = sah_rendered_10yr
  ),
  path = "~/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/sah_incidence_by_ethnicity.xlsx"
)

# Filter and clean
sah_crude_5yr_filtered <- sah_crude_5yr %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Define printer-safe pink palette for crude
sah_crude_colors <- c(
  "Black African"   = "#67001f",
  "Black Caribbean" = "#b2182b",
  "Other"           = "#d6604d",
  "White"           = "#f4a582"
)

# Plot
ggplot(sah_crude_5yr_filtered, aes(x = period_5yr, y = crude_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_crude, ymax = upper_ci_crude), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = sah_crude_colors) +
  labs(
    title = "5-Year Crude Incidence of Subarachnoid Haemorrhage by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# Filter and clean
sah_esp_5yr_filtered <- sah_esp_5yr %>%
  filter(ethnicity != "Black Other", !is.na(period_5yr))

# Define printer-safe purple palette for ESP
sah_esp_colors <- c(
  "Black African"   = "#49006a",
  "Black Caribbean" = "#7a0177",
  "Other"           = "#ae017e",
  "White"           = "#dd1c77"
)

# Plot
ggplot(sah_esp_5yr_filtered, aes(x = period_5yr, y = std_rate, group = ethnicity, color = ethnicity)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = lower_ci_esp, ymax = upper_ci_esp), width = 0.15, linewidth = 0.4) +
  scale_color_manual(values = sah_esp_colors) +
  labs(
    title = "5-Year ESP-Standardised Incidence of Subarachnoid Haemorrhage by Ethnicity (1995–2024)",
    subtitle = "Rates per 100,000 population with 95% CI",
    y = "Incidence per 100,000",
    x = "Period",
    color = "Ethnicity"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey85", linewidth = 0.3),
    panel.grid.minor = element_line(color = "grey92", linewidth = 0.2)
  )

# -----------------------------------------------
# Testing some ideas for the ESOC
# -----------------------------------------------

library(dplyr)

# Define ESP weights
esp <- tibble::tibble(
  age_group = c("20-24", "25-29", "30-34", "35-39", "40-44", "45-49",
                "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
                "80-84", "85+"),
  std_pop = c(6000, 6000, 6500, 7000, 7000, 7000,
              7000, 6000, 5000, 4000, 3000, 2000, 1000, 1000)
)
esp_total <- sum(esp$std_pop)

# Filter ischaemic strokes and assign age_group
slsr_ischaemic <- slsr_clean %>%
  filter(subtype %in% 1:5, age >= 20, !is.na(ethnicity), !is.na(sex)) %>%
  mutate(
    year = lubridate::year(dtstrk),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    )
  )

# Count strokes by year, ethnicity, sex, age_group
ischaemic_counts_stratified <- slsr_ischaemic %>%
  count(year, ethnicity, sex, age_group, name = "cases")

library(readr)
library(dplyr)

# Load the CSV
summary_interpolated <- read_csv("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/PhD/Incidence 30 years/Census check/summary_interpolated_full.csv")

# Clean and prepare the population data
population_by_age_ethnicity_sex <- summary_interpolated %>%
  rename(
    year = Year,
    sex = Sex,
    ethnicity = Ethnicity,
    age_group = `Age Range`,
    population = Total_interp
  ) %>%
  # Keep only ESP-compatible age groups
  filter(age_group %in% c("20-24", "25-29", "30-34", "35-39", "40-44", 
                          "45-49", "50-54", "55-59", "60-64", "65-69", 
                          "70-74", "75-79", "80-84", "85")) %>%
  mutate(age_group = ifelse(age_group == "85", "85+", age_group))

# Step 1: Categorise age group and include sex
stroke_age_ethnicity_sex <- slsr_clean %>%
  filter(age >= 20, !is.na(ethnicity), !is.na(sex)) %>%
  mutate(
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    ),
    year = lubridate::year(dtstrk)
  ) %>%
  count(year, ethnicity, sex, age_group, name = "cases")

stroke_age_ethnicity_sex <- stroke_age_ethnicity_sex %>%
  mutate(
    sex = case_when(
      sex == 1 ~ "Male",
      sex == 2 ~ "Female",
      TRUE ~ NA_character_
    )
  )

# Join with population by age/ethnicity/sex and ESP weights
esp_by_sex <- stroke_age_ethnicity_sex %>%
  mutate(sex = as.character(sex)) %>%
  left_join(population_by_age_ethnicity_sex, 
            by = c("year", "age_group", "ethnicity", "sex")) %>%
  rename(population = population) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity, sex, age_group) %>%
  summarise(
    std_rate = (sum((cases / population) * std_pop) / esp_total) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )

library(dplyr)
library(glue)
library(tidyr)

# Step 1: Format ESP values with CIs
esp_formatted <- esp_by_sex %>%
  mutate(
    sex = ifelse(sex == 1, "Male", "Female"),
    value = glue("{round(std_rate, 1)} (95% CI {round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})")
  ) %>%
  select(year, ethnicity, sex, age_group, value)

# Optional: filter specific year if needed
# esp_formatted <- esp_formatted %>% filter(year == 2020)

# Step 2: Pivot wider to render table with both sexes side-by-side
esp_rendered_table <- esp_formatted %>%
  unite("ethnicity_sex", ethnicity, sex, sep = " (") %>%
  mutate(ethnicity_sex = paste0(ethnicity_sex, ")")) %>%
  pivot_wider(
    names_from = ethnicity_sex,
    values_from = value
  ) %>%
  arrange(factor(age_group, levels = c(
    "20-24", "25-29", "30-34", "35-39", "40-44", "45-49",
    "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
    "80-84", "85+"
  )))

# View table
print(esp_rendered_table)

# == Plotting ==
library(dplyr)

esp_total <- sum(esp$std_pop)  # Make sure your `esp` table is loaded

# Create age-sex-ethnicity-level incidence with ESP standardisation
esp_by_sex_age <- stroke_age_ethnicity_sex %>%
  left_join(population_by_age_ethnicity_sex, 
            by = c("year" = "year", "age_group" = "age_group", 
                   "ethnicity" = "ethnicity", "sex" = "sex")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity, sex, age_group) %>%
  summarise(
    std_rate = (sum(cases) / sum(population)) * std_pop / esp_total * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci_esp = pmax(0, std_rate - 1.96 * se),
    upper_ci_esp = std_rate + 1.96 * se,
    .groups = "drop"
  )
library(ggplot2)
library(dplyr)

# Clean data
esp_plot_data <- esp_by_sex_age %>%
  filter(ethnicity != "Black Other") %>%
  mutate(sex = factor(sex, levels = c("Male", "Female")),
         age_group = factor(age_group, levels = esp$age_group))

# Faceted bar plot
ggplot(esp_plot_data, aes(x = age_group, y = std_rate, fill = sex)) +
  geom_bar(stat = "identity", position = position_dodge(), width = 0.8) +
  facet_wrap(~ ethnicity) +
  scale_fill_manual(values = c("Male" = "#377eb8", "Female" = "#e41a1c")) +
  labs(
    title = "ESP-Standardised Ischaemic Stroke Incidence by Age, Sex, and Ethnicity",
    subtitle = "Incidence per 100,000 population",
    x = "Age Group",
    y = "ESP Incidence",
    fill = "Sex"
  ) +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

library(tidyr)

# Prepare heatmap-style format
heatmap_data <- esp_plot_data %>%
  unite("group", ethnicity, sex, sep = "_") %>%
  select(age_group, group, std_rate) %>%
  pivot_wider(names_from = group, values_from = std_rate)

# Convert to matrix for heatmap if needed:
# heatmap_matrix <- as.matrix(heatmap_data[,-1])
# rownames(heatmap_matrix) <- heatmap_data$age_group
# heatmap(heatmap_matrix, Colv = NA, Rowv = NA, scale = "none")

# Or use ggplot-based heatmap
heatmap_plot_data <- esp_plot_data %>%
  mutate(group = paste(ethnicity, sex, sep = "\n"))

ggplot(heatmap_plot_data, aes(x = group, y = age_group, fill = std_rate)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "#f7fbff", high = "#08306b", na.value = "grey90") +
  labs(
    title = "Heatmap of ESP-Standardised Stroke Incidence",
    subtitle = "By Age Group, Ethnicity, and Sex",
    x = "",
    y = "Age Group",
    fill = "ESP Rate"
  ) +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# == Bars without the other ==
library(dplyr)
library(ggplot2)

# Recalculate esp_plot_data excluding "Other"
esp_plot_data <- esp_by_sex_age %>%
  filter(!ethnicity %in% c("Black Other", "Other")) %>%  # exclude 'Other' group
  mutate(
    sex = factor(sex, levels = c("Male", "Female")),
    age_group = factor(age_group, levels = esp$age_group)
  )

library(ggplot2)
library(dplyr)

# Re-filter and reformat data
esp_plot_data <- esp_by_sex_age %>%
  filter(!ethnicity %in% c("Black Other", "Other")) %>%
  mutate(
    sex = factor(sex, levels = c("Male", "Female")),
    age_group = factor(age_group, levels = esp$age_group)
  )

# New purple palette
purple_palette <- c("Male" = "#8073ac", "Female" = "#d8b5d6")

# Updated plot
ggplot(esp_plot_data, aes(x = age_group, y = std_rate, fill = sex)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
  facet_wrap(~ ethnicity, scales = "free_y") +
  scale_fill_manual(values = purple_palette) +
  labs(
    title = "ESP-Standardised Ischaemic Stroke Incidence by Age, Sex, and Ethnicity",
    subtitle = "Excluding 'Other' group — Incidence per 100,000 population",
    x = "Age Group",
    y = "ESP Incidence",
    fill = "Sex"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, size = 9),
    strip.text = element_text(face = "bold"),
    legend.position = "bottom",
    plot.title = element_text(face = "bold")
  )

## Heatmap
library(dplyr)
library(ggplot2)

# Prepare the data, excluding "Other" and "Black Other"
heatmap_data <- esp_by_sex_age %>%
  filter(!ethnicity %in% c("Other", "Black Other")) %>%
  mutate(
    group = paste(ethnicity, sex),
    age_group = factor(age_group, levels = esp$age_group),
    group = factor(group)
  )

# Heatmap plot
# Clean the data to avoid duplicates
heatmap_data_clean <- heatmap_data %>%
  distinct(age_group, group, .keep_all = TRUE)

# Plot with purple gradient
library(ggplot2)
library(dplyr)

# Compute the midpoint of the gradient to decide text color threshold
threshold <- 50  # Adjust this value to tune contrast behavior

# Add a text color column based on fill intensity
heatmap_data_clean <- heatmap_data_clean %>%
  mutate(text_color = ifelse(std_rate > threshold, "white", "black"))

# Plot
library(dplyr)
library(ggplot2)
library(glue)

# Step 1: Format label and determine text color
heatmap_data_labelled <- heatmap_data_clean %>%
  mutate(
    label = glue("{round(std_rate, 1)} ({round(lower_ci_esp, 1)}–{round(upper_ci_esp, 1)})"),
    text_color = ifelse(std_rate > 50, "white", "black")  # adjust threshold if needed
  )

# Step 2: Plot with CIs in labels
ggplot(heatmap_data_labelled, aes(x = group, y = age_group, fill = std_rate)) +
  geom_tile(color = "white") +
  geom_text(aes(label = label, color = text_color), size = 2.5, show.legend = FALSE) +
  scale_color_identity() +
  scale_fill_gradient(
    name = "ESP Rate",
    low = "#f2e5f7", high = "#49006a", na.value = "grey90"
  ) +
  labs(
    title = "Heatmap of ESP-Standardised Ischaemic Stroke Incidence",
    subtitle = "By Age Group, Ethnicity, and Sex — Point estimate with 95% CI per 100,000",
    x = NULL,
    y = "Age Group"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    panel.grid = element_blank(),
    legend.position = "right"
  )

  )

## Heatmap summarised 30 years

esp_summary_all_years <- esp_plot_data %>%
  group_by(ethnicity, sex, age_group) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    lower_ci = mean(lower_ci_esp, na.rm = TRUE),
    upper_ci = mean(upper_ci_esp, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    label = glue::glue("{round(std_rate, 1)} ({round(lower_ci, 1)}–{round(upper_ci, 1)})"),
    group = paste(ethnicity, sex)
  )

library(dplyr)
library(ggplot2)
library(glue)

# Step 1: Format label and determine text color using your summary dataset
heatmap_data_labelled <- espischaemic_summary_all_years %>%
  mutate(
    label = glue("{round(std_rate, 1)} ({round(lower_ci, 1)}–{round(upper_ci, 1)})"),
    text_color = ifelse(std_rate > 50, "white", "black")  # or adjust threshold if needed
  )

# Step 2: Plot
library(dplyr)
library(ggplot2)
library(glue)

# Step 1: Format label and determine text color dynamically
heatmap_data_labelled <- espischaemic_summary_all_years %>%
  mutate(
    label = glue("{round(std_rate, 1)} ({round(lower_ci, 1)}–{round(upper_ci, 1)})"),
    text_color = ifelse(std_rate > 25, "white", "black")  # threshold can be adjusted
  )

# Step 2: Plot with conditional text color
ggplot(heatmap_data_labelled, aes(x = group, y = age_group, fill = std_rate)) +
  geom_tile(color = "white") +
  geom_text(aes(label = label), color = heatmap_data_labelled$text_color, size = 2.5) +
  scale_fill_gradient(
    name = "ESP Rate",
    low = "#f2e5f7", high = "#49006a", na.value = "grey90"
  ) +
  labs(
    title = "Heatmap of ESP-Standardised Ischaemic Stroke Incidence",
    subtitle = "By Age Group, Ethnicity, and Sex — Point estimate with 95% CI per 100,000",
    x = NULL,
    y = "Age Group"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    panel.grid = element_blank(),
    legend.position = "right"
  )

# Plot for haemorrhagic

library(dplyr)
library(lubridate)

# Filter haemorrhagic strokes and assign age groups
slsr_haem <- slsr_clean %>%
  filter(subtype == 6, age >= 20, !is.na(ethnicity), !is.na(sex)) %>%
  mutate(
    year = year(dtstrk),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    ),
    sex = case_when(
      sex == 1 ~ "Male",
      sex == 2 ~ "Female",
      TRUE ~ NA_character_
    )
  )

# Count cases by strata
haem_counts_stratified <- slsr_haem %>%
  count(year, ethnicity, sex, age_group, name = "cases")

# Join with population and ESP weights and spreading the ages
esp_haem_summary_all_years <- haem_counts_stratified %>%
  left_join(population_by_age_ethnicity_sex, 
            by = c("year", "age_group", "ethnicity", "sex")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity, sex, age_group) %>%
  summarise(
    std_rate = (sum(cases / population) * std_pop / esp_total) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

  # Now average over 30 years
 esp_haem_summary_grouped <- esp_haem_summary_all_years %>%
  group_by(ethnicity, sex, age_group) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    lower_ci = mean(lower_ci, na.rm = TRUE),
    upper_ci = mean(upper_ci, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    label = glue::glue("{round(std_rate, 2)} ({round(lower_ci, 2)}–{round(upper_ci, 2)})"),
    group = paste(ethnicity, sex)
  )

library(dplyr)
library(ggplot2)
library(glue)

library(dplyr)
library(ggplot2)
library(glue)

# Step 1: Group ages into 6 bands
esp_haem_summary_grouped <- esp_haem_summary_all_years %>%
  filter(!ethnicity %in% c("Black Other", "Other")) %>%
  mutate(
    age_group_6cat = case_when(
      age_group %in% c("20-24", "25-29", "30-34", "35-39", "40-44") ~ "15–44",
      age_group %in% c("45-49", "50-54") ~ "45–54",
      age_group %in% c("55-59", "60-64") ~ "55–64",
      age_group %in% c("65-69", "70-74") ~ "65–74",
      age_group %in% c("75-79", "80-84") ~ "75–84",
      age_group == "85+" ~ "85+"
    )
  ) %>%
  group_by(ethnicity, sex, age_group_6cat) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    lower_ci = mean(lower_ci, na.rm = TRUE),
    upper_ci = mean(upper_ci, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    label = glue("{round(std_rate, 2)} ({round(lower_ci, 2)}–{round(upper_ci, 2)})"),
    group = paste(ethnicity, sex),
    text_color = ifelse(std_rate > 0.7, "white", "black")  # adjust if needed
  )

# Step 2: Plot
library(glue)

esp_haem_summary_grouped <- esp_haem_summary_grouped %>%
  mutate(
    group = paste(ethnicity, sex),
    label = glue("{round(std_rate, 2)} ({round(lower_ci, 2)}–{round(upper_ci, 2)})"),
    text_color = ifelse(std_rate > 7, "white", "black")  # tweak threshold as needed
  )
ggplot(esp_haem_summary_grouped, aes(x = group, y = age_group_6cat, fill = std_rate)) +
  geom_tile(color = "white") +
  geom_text(aes(label = label, color = text_color), size = 3, show.legend = FALSE) +
  scale_color_identity() +
  scale_fill_gradient(
    name = "ESP Rate\n(per 1,000)",
    low = "#f2e5f7", high = "#49006a", na.value = "grey90"
  ) +
  labs(
    title = "Heatmap of ESP-Standardised Haemorrhagic Stroke Incidence",
    subtitle = "Grouped by Age, Sex, and Ethnicity — Average over 30 years per 1,000 with 95% CI",
    x = NULL, y = "Age Group"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    panel.grid = element_blank(),
    legend.position = "right"
  )

write_xlsx(
  list("Haemorrhagic 30y" = haem_counts_stratified),
  path = "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/stroke_incidence_ethnicity_rendered.xlsx"
)

# Plot for SAH
library(dplyr)
library(lubridate)
library(glue)
library(ggplot2)

# Step 1: Filter SAH strokes and assign age groups
slsr_sah <- slsr_clean %>%
  filter(subtype == 7, age >= 20, !is.na(ethnicity), !is.na(sex)) %>%
  mutate(
    year = year(dtstrk),
    age_group = case_when(
      age >= 20 & age < 25 ~ "20-24",
      age >= 25 & age < 30 ~ "25-29",
      age >= 30 & age < 35 ~ "30-34",
      age >= 35 & age < 40 ~ "35-39",
      age >= 40 & age < 45 ~ "40-44",
      age >= 45 & age < 50 ~ "45-49",
      age >= 50 & age < 55 ~ "50-54",
      age >= 55 & age < 60 ~ "55-59",
      age >= 60 & age < 65 ~ "60-64",
      age >= 65 & age < 70 ~ "65-69",
      age >= 70 & age < 75 ~ "70-74",
      age >= 75 & age < 80 ~ "75-79",
      age >= 80 & age < 85 ~ "80-84",
      age >= 85 ~ "85+"
    ),
    sex = case_when(
      sex == 1 ~ "Male",
      sex == 2 ~ "Female",
      TRUE ~ NA_character_
    )
  )

# Step 2: Count SAH cases
sah_counts_stratified <- slsr_sah %>%
  count(year, ethnicity, sex, age_group, name = "cases")

# Step 3: Join population and ESP weights, compute yearly ESP-standardised rates
esp_sah_summary_all_years <- sah_counts_stratified %>%
  left_join(population_by_age_ethnicity_sex, 
            by = c("year", "age_group", "ethnicity", "sex")) %>%
  left_join(esp, by = "age_group") %>%
  filter(!is.na(cases), !is.na(population), population > 0) %>%
  group_by(year, ethnicity, sex, age_group) %>%
  summarise(
    std_rate = (sum(cases / population) * std_pop / esp_total) * 100000,
    se = sqrt(sum((std_pop^2) * (cases / (population^2)))) / esp_total * 100000,
    lower_ci = pmax(0, std_rate - 1.96 * se),
    upper_ci = std_rate + 1.96 * se,
    .groups = "drop"
  )

# Step 4: Collapse to 30-year average and group into 6 age bands
esp_sah_summary_grouped <- esp_sah_summary_all_years %>%
  filter(!ethnicity %in% c("Black Other", "Other")) %>%
  mutate(
    age_group_6cat = case_when(
      age_group %in% c("20-24", "25-29", "30-34", "35-39", "40-44") ~ "15–44",
      age_group %in% c("45-49", "50-54") ~ "45–54",
      age_group %in% c("55-59", "60-64") ~ "55–64",
      age_group %in% c("65-69", "70-74") ~ "65–74",
      age_group %in% c("75-79", "80-84") ~ "75–84",
      age_group == "85+" ~ "85+"
    )
  ) %>%
  group_by(ethnicity, sex, age_group_6cat) %>%
  summarise(
    std_rate = mean(std_rate, na.rm = TRUE),
    lower_ci = mean(lower_ci, na.rm = TRUE),
    upper_ci = mean(upper_ci, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    group = paste(ethnicity, sex),
    label = glue("{round(std_rate, 2)} ({round(lower_ci, 2)}–{round(upper_ci, 2)})"),
    text_color = ifelse(std_rate > 7, "white", "black")
  )

# Step 5: Plot heatmap
ggplot(esp_sah_summary_grouped, aes(x = group, y = age_group_6cat, fill = std_rate)) +
  geom_tile(color = "white") +
  geom_text(aes(label = label, color = text_color), size = 3, show.legend = FALSE) +
  scale_color_identity() +
  scale_fill_gradient(
    name = "ESP Rate\n(per 100,000)",
    low = "#f2e5f7", high = "#49006a", na.value = "grey90"
  ) +
  labs(
    title = "Heatmap of ESP-Standardised SAH Incidence",
    subtitle = "Grouped by Age, Sex, and Ethnicity — Average over 30 years per 100,000 with 95% CI",
    x = NULL, y = "Age Group"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
    panel.grid = element_blank(),
    legend.position = "right"
  )

write_xlsx(
  list("SAH 30y" = esp_sah_summary_all_years),
  path = "/Users/mariacamilapantojaruiz/Library/Mobile Documents/com~apple~CloudDocs/Documents/R/stroke_incidence_ethnicity_rendered.xlsx"
)

# Forest Plots
library(dplyr)
library(glue)

plot_data <- irr_summary_all_strokes %>%
  filter(!ethnicity %in% c("Other", "Black Other")) %>%  # exclude unwanted groups
  mutate(
    group = paste(ethnicity, sex),
    label = glue("{round(IRR, 2)} ({round(lower_CI, 2)}–{round(upper_CI, 2)})\np = {ifelse(p_value < 0.001, '<0.001', round(p_value, 3))}"),
    text_color = ifelse(IRR > 2.5, "white", "black")
  )
